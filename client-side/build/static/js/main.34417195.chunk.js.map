{"version":3,"sources":["app/api/agent.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/layout/Nav.tsx","app/layout/Loading.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/FormInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/common/form/FormTextArea.tsx","app/common/form/FormSelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/FormDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailsChat.tsx","features/activities/details/ActivityDetailsHeader.tsx","features/activities/details/ActivityDetailsInfo.tsx","features/activities/details/ActivityDetailsSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["sleep","delay","Promise","resolve","setTimeout","axios","defaults","baseURL","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","details","id","create","activity","update","Account","getCurrent","login","user","register","ActivityStore","activityRegistry","Map","selectedActivity","undefined","editMode","loading","loadingInitial","getActivity","setActivity","date","Date","set","loadActivities","activities","runInAction","forEach","console","log","loadActivity","createActivity","updateActivity","deleteActivity","makeAutoObservable","this","Array","from","values","sort","b","getTime","Object","entries","activitiesByDate","reduce","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","activityStore","getItem","appLoaded","setAppLoaded","reaction","setItem","userStore","modal","open","openModal","content","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","image","avatar","spaced","Dropdown","pointing","text","displayName","Link","userName","icon","onClick","Loading","Dimmer","active","Loader","ActivityFilters","vertical","size","width","marginTop","Header","attached","color","ActivityListItem","Segment","Group","circular","Content","title","Description","Icon","venue","secondary","clearing","description","floated","groupedActivities","map","group","sub","useEffect","Grid","GridColumn","FormInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","initialValues","email","password","onSubmit","setErrors","catch","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","marginBottom","fluid","ValidationErrors","Message","List","err","i","validationSchema","Yup","required","isValid","dirty","disabled","isLoggedIn","FormTextArea","FormSelectInput","helpers","Select","clearable","options","value","onChange","e","d","setValue","onBlur","setTouched","categoryOptions","FormDateInput","selected","useParams","useHistory","useState","category","city","nullable","length","newActivity","uuid","submitFormHandler","enableReinitialize","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","reply","TextArea","labelPosition","primary","activityImageStyle","filter","activityImageTextStyle","bottom","left","height","padding","Column","verticalAlign","relaxed","divided","ribbon","Extra","TestErrors","baseUrl","widths","NotFound","Inline","message","stackTrace","Modal","onClose","location","useLocation","finally","hideProgressBar","path","component","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ServerError","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.34417195.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity } from '../models/activity';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    await sleep(1000);\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === 'string') {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n          history.push('/not-found');\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error('Unauthorised');\r\n        break;\r\n      case 404:\r\n        history.push('/not-found');\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push('/server-error');\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: () => requests.get<Activity[]>('/activities'),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: Activity) => requests.post<void>('/activities', activity),\r\n  update: (activity: Activity) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n};\r\n\r\nconst Account = {\r\n  getCurrent: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n};\r\n\r\nexport default agent;\r\n","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Activity } from '../models/activity';\r\nimport { format } from 'date-fns'\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n        return activities;\r\n      }, {} as {[key: string]: Activity[]})\r\n    )\r\n  }\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const activities = await agent.Activities.list();\r\n      runInAction(() => {\r\n        activities.forEach((activity) => {\r\n          this.setActivity(activity);\r\n        });\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else this.loadingInitial = true;\r\n    try {\r\n      activity = await agent.Activities.details(id);\r\n      this.setActivity(activity);\r\n      this.selectedActivity = activity;\r\n      runInAction(() => {\r\n        this.loadingInitial = false;\r\n      });\r\n      return activity;\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  createActivity = async (activity: Activity) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      runInAction(() => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.selectedActivity = activity;\r\n        this.editMode = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: Activity) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.selectedActivity = activity;\r\n        this.editMode = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => {\r\n                this.user = user;\r\n            });\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/')\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.getCurrent();\r\n            runInAction(() => {\r\n                this.user = user\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => {\r\n                this.user = user;\r\n            });\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}","import { createContext, useContext } from 'react';\r\nimport ActivityStore from './activityStore';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport UserStore from './userStore';\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore()\r\n\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(() => this.token, token => {\r\n            if(token) window.localStorage.setItem('jwt', token)\r\n            else window.localStorage.removeItem('jwt')\r\n        })\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","//Semantic ui\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nconst Nav = () => {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed='top'>\r\n      <Container>\r\n        <Menu.Item as={NavLink} to='/' exact header>\r\n          <img\r\n            src='/assets/logo.png'\r\n            alt='logo'\r\n            style={{ marginRight: '10px' }}\r\n          />\r\n          React and DotNet\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n        <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to='/createActivity'\r\n            positive\r\n            content='Create Activity'\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n          <Image\r\n            src={user?.image || '/assets/user.png'}\r\n            avatar\r\n            spaced='right'\r\n          />\r\n          <Dropdown pointing='top left' text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profile/${user?.userName}`}\r\n                text='My Profile'\r\n                icon='user'\r\n              />\r\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(Nav);\r\n","import { Dimmer, Loader } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\nconst Loading = ({inverted = true, content = 'Loading...'}: Props) => {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n           <Loader content={content} /> \r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import Calendar from \"react-calendar\"\r\nimport { Header, Menu } from \"semantic-ui-react\"\r\n\r\n\r\n\r\nconst ActivityFilters = () => {\r\n    return (\r\n        <>\r\n        <Menu vertical size='large' style={{width: '100%', marginTop: 26}}>\r\n            <Header icon='filter' attached color='teal' content='Filters' />\r\n            <Menu.Item content='All Activities' />\r\n            <Menu.Item content=\"I'm Going\" />\r\n            <Menu.Item content=\"I'm Hosting\" />\r\n        </Menu>\r\n        <Header />\r\n        <Calendar />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActivityFilters\r\n","import { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { format } from 'date-fns';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityListItem = ({ activity }: Props) => {\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image size='tiny' circular src='/assets/user.png' />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by Bob</Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n          <span>\r\n              <Icon name='clock' color='teal' /> {format( activity.date!, 'dd MMM yyyy h:mm aa')} \r\n              <Icon name='marker' color='teal' /> {activity.venue}\r\n          </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        Attendees go here\r\n      </Segment>\r\n      <Segment clearing>\r\n          <span>{activity.description}</span>\r\n          <Button as={Link} to={`/activities/${activity.id}`} color='teal' floated='right' content='View' />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nconst ActivityList = () => {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n              {activities.map((activity) => (\r\n                <ActivityListItem key={activity.id} activity={activity} />\r\n              ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { Grid, GridColumn } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\n\r\nconst ActivityDashboard = () => {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, loadingInitial } = activityStore;\r\n\r\n  useEffect(() => {\r\n    if(activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry, loadActivities]);\r\n\r\n  if (loadingInitial) return <Loading content='loading activities...' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <GridColumn width='10'>\r\n        <ActivityList />\r\n      </GridColumn>\r\n      <GridColumn width='6'>\r\n        <ActivityFilters />\r\n      </GridColumn>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import { useField } from \"formik\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    label?: string;\r\n    type?: string;\r\n}\r\n\r\nconst FormInput = (props: Props) => {\r\n    const [field, meta] = useField(props.name)\r\n    \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport FormInput from '../../app/common/form/FormInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst LoginForm = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: 'Invalid email or password' }))\r\n      }>\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n          <Header as='h2' content='Login to react and dotnet' color='teal' textAlign='center' />\r\n          <FormInput name='email' placeholder='Email' />\r\n          <FormInput name='password' placeholder='Password' type='password' />\r\n          <ErrorMessage name='error' render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />} />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content='Login'\r\n            type='submit'\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import { Message } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nconst ValidationErrors = ({errors}: Props) => {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default ValidationErrors\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport FormInput from '../../app/common/form/FormInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nconst RegisterForm = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: '', userName: '', email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        userName: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n          <Header as='h2' content='Sign up to react and dotnet' color='teal' textAlign='center' />\r\n          <FormInput name='displayName' placeholder='Display Name' />\r\n          <FormInput name='userName' placeholder='Username' />\r\n          <FormInput name='email' placeholder='Email' />\r\n          <FormInput name='password' placeholder='Password' type='password' />\r\n          <ErrorMessage\r\n            name='error'\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content='Register'\r\n            type='submit'\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nconst HomePage = () => {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n          React And Dotnet\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as='h2' inverted content='Welcome To React and Dotnet' />\r\n            <Button as={Link} to='/activities' size='huge' inverted content='Go to the activities!' />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n              Login!\r\n            </Button>\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n              Register!\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","import { useField } from \"formik\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nconst FormTextArea = (props: Props) => {\r\n    const [field, meta] = useField(props.name)\r\n    \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n\r\nexport default FormTextArea","import { useField } from 'formik';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nconst FormSelectInput = (props: Props) => {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default FormSelectInput;\r\n","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'},\r\n]","import { useField } from 'formik';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nconst FormDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={value => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default FormDateInput;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormInput from '../../../app/common/form/FormInput';\r\nimport FormTextArea from '../../../app/common/form/FormTextArea';\r\nimport FormSelectInput from '../../../app/common/form/FormSelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport FormDateInput from '../../../app/common/form/FormDateInput';\r\nimport { Activity } from '../../../app/models/activity';\r\n\r\nconst ActivityForm = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loading,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n\r\n  const [activity, setActivity] = useState<Activity>({\r\n    id: '',\r\n    title: '',\r\n    category: '',\r\n    description: '',\r\n    date: null,\r\n    city: '',\r\n    venue: '',\r\n  });\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The Activity Title Is Required'),\r\n    description: Yup.string().required('The Activity Description Is Required'),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required('A Date Is Required').nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(activity!));\r\n  }, [id, loadActivity]);\r\n\r\n  const submitFormHandler = (activity: Activity) => {\r\n    if (activity.id.length === 0) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  if (loadingInitial) return <Loading content='Loading Activity...' />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content='Activity Details' sub color='teal' />\r\n      <Formik\r\n        initialValues={activity}\r\n        onSubmit={(values) => submitFormHandler(values)}\r\n        enableReinitialize\r\n        validationSchema={validationSchema}>\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n            <FormInput name='title' placeholder='Title' />\r\n            <FormTextArea rows={3} placeholder='Description' name='description' />\r\n            <FormSelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n            <FormDateInput placeholderText='Date' name='date' showTimeSelect timeCaption='Time' dateFormat='MMMM d, yyyy h:mm aa' />\r\n            <Header content='Location Details' sub color='teal' />\r\n            <FormInput placeholder='City' name='city' />\r\n            <FormInput placeholder='Venue' name='venue' />\r\n            <Button\r\n            disabled={isSubmitting || !dirty || !isValid}\r\n              floated='right'\r\n              positive\r\n              type='submit'\r\n              content='Submit'\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to='/activities'\r\n              floated='right'\r\n              type='button'\r\n              content='Cancel'\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Segment, Header, Comment, Form, Button } from 'semantic-ui-react';\r\n\r\nconst ActivityDetailsChat = () => {\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign='center'\r\n        attached='top'\r\n        inverted\r\n        color='teal'\r\n        style={{ border: 'none' }}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Matt</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>Today at 5:42PM</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>How artistic!</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>5 days ago</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Form reply>\r\n            <Form.TextArea />\r\n            <Button\r\n              content='Add Reply'\r\n              labelPosition='left'\r\n              icon='edit'\r\n              primary\r\n            />\r\n          </Form>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailsChat);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { format } from 'date-fns';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\n const ActivityDetailsHeader = ({activity}: Props) => {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong>Bob</strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                <Button color='teal'>Join Activity</Button>\r\n                <Button>Cancel attendance</Button>\r\n                <Button as={Link} to={`/manage/${activity.id}`} color='orange' floated='right'>\r\n                    Manage Event\r\n                </Button>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n};\r\n\r\nexport default observer(ActivityDetailsHeader)\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { format } from 'date-fns'\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailsInfo = ({ activity }: Props) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached='top'>\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size='large' color='teal' name='info' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='calendar' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='marker' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailsInfo);\r\n","import React from 'react';\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ActivityDetailsSidebar = () => {\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign='center'\r\n        style={{ border: 'none' }}\r\n        attached='top'\r\n        secondary\r\n        inverted\r\n        color='teal'>\r\n        3 People Going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          <Item style={{ position: 'relative' }}>\r\n            <Label\r\n              style={{ position: 'absolute' }}\r\n              color='orange'\r\n              ribbon='right'>\r\n              Host\r\n            </Label>\r\n            <Image size='tiny' src={'/assets/user.png'} />\r\n            <Item.Content verticalAlign='middle'>\r\n              <Item.Header as='h3'>\r\n                <Link to={`#`}>Bob</Link>\r\n              </Item.Header>\r\n              <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n\r\n          <Item style={{ position: 'relative' }}>\r\n            <Image size='tiny' src={'/assets/user.png'} />\r\n            <Item.Content verticalAlign='middle'>\r\n              <Item.Header as='h3'>\r\n                <Link to={`#`}>Tom</Link>\r\n              </Item.Header>\r\n              <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n\r\n          <Item style={{ position: 'relative' }}>\r\n            <Image size='tiny' src={'/assets/user.png'} />\r\n            <Item.Content verticalAlign='middle'>\r\n              <Item.Header as='h3'>\r\n                <Link to={`#`}>Sally</Link>\r\n              </Item.Header>\r\n            </Item.Content>\r\n          </Item>\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailsSidebar);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailsChat from './ActivityDetailsChat';\r\nimport ActivityDetailsHeader from './ActivityDetailsHeader';\r\nimport ActivityDetailsInfo from './ActivityDetailsInfo';\r\nimport ActivityDetailsSidebar from './ActivityDetailsSidebar';\r\n\r\nconst ActivityDetails = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n  }, [id, loadActivity]);\r\n\r\n  if (loadingInitial || !activity) return <Loading />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailsHeader activity={activity} />\r\n        <ActivityDetailsInfo activity={activity} />\r\n        <ActivityDetailsChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailsSidebar />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nconst TestErrors = () => {\r\n\r\n    const [errors, setErrors] = useState(null)\r\n    const baseUrl = 'http://localhost:5000/api/'\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && (\r\n                <ValidationErrors errors={errors} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestErrors","import { Link } from \"react-router-dom\"\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\"\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Sorry - we've looked everywhere and could not find this...\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>Return to activities page</Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst ServerError = () => {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as='h1' content='Server Error' />\r\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n      {commonStore.error?.stackTrace && (\r\n        <Segment>\r\n          <Header as='h4' content='Stack Trace' color='teal' />\r\n          <code style={{ marginTop: '10px' }}>\r\n            {commonStore.error.stackTrace}\r\n          </code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default observer(ServerError);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nconst ModalContainer = () => {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n      <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n          <Modal.Content>\r\n              {modalStore.modal.body}\r\n          </Modal.Content>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","//semantic ui\nimport { Container } from 'semantic-ui-react';\n\n//react and router\nimport { useEffect } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\n//mobx\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../stores/store';\n\n//components & pages\nimport Nav from './Nav';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport LoginForm from '../../features/users/LoginForm';\nimport Loading from './Loading';\n\n//error pages\nimport TestErrors from '../../features/errors/TestErrors';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport ModalContainer from '../common/modals/ModalContainer';\n\n\n\n\nconst App = () => {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if(commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded())\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if(!commonStore.appLoaded) return <Loading content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <Nav />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <Route exact path='/activities' component={ActivityDashboard} />\n                <Route path='/activities/:id' component={ActivityDetails} />\n                <Route\n                  key={location.key}\n                  path={['/createActivity', '/manage/:id']}\n                  component={ActivityForm}\n                />\n                <Route path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route path='/login' component={LoginForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}